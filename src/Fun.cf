-- Program
Prog. Program  ::= [Stmt];

-- Comments
comment "#";

-- Terminators
terminator Stmt ";" ;
separator nonempty Ident "";
separator nonempty Decl ",";

-- Statements
SExp.    Stmt  ::= Exp;
SDecl.   Stmt  ::= "let" Decl;

-- Declarations
DFun.    Decl  ::= Ident [Ident] "=" Exp;
DVal.    Decl  ::= Ident "=" Exp;

-- Expressions
ELet.    Exp   ::= "let" Decl "in" "{" Exp "}";
EIf.     Exp   ::= "if" Exp "then" Exp "else" Exp "endif";
ELam.    Exp   ::= "lam" [Ident] "->" "{" Exp "}";
ELog.    Exp   ::= Exp LogOpr Exp1;
ERec.    Exp   ::= "{" [Decl] "}";
EEq.     Exp1  ::= Exp1 EqOpr Exp2;
ERel.    Exp2  ::= Exp2 RelOpr Exp3;
EAdd.    Exp3  ::= Exp3 AddOpr Exp4;
EMul.    Exp4  ::= Exp4 MulOpr Exp5;
ENeg.    Exp5  ::= "not" Exp6;
ESum.    Exp6  ::= Exp7 "&" Exp7;
EApp.    Exp7  ::= Exp7 "$" Exp8;
EDot.    Exp8  ::= Exp9 "." Ident;
EConst.  Exp9  ::= Constant;
EVal.    Exp9  ::= Ident;

coercions Exp 9;

-- Constant
CInt.    Constant ::= Integer;
CTrue.	 Constant ::= "true";
CFalse.	 Constant ::= "false";

-- Operators
-- Logical Operators
OOr.     LogOpr ::= "or";
OAnd.    LogOpr ::= "and";
-- Equality Operators
OEq.     EqOpr  ::= "==";
ONeq.    EqOpr  ::= "!=";
-- Relational Operators
OLes.    RelOpr ::= "<";
OGrt.    RelOpr ::= ">";
OLeq.    RelOpr ::= "<=";
OGeq.    RelOpr ::= ">=";
-- Addition and Substitution operators
OAdd.    AddOpr ::= "+";
OSub.    AddOpr ::= "-";
-- Multiplication and division operators
OMul.    MulOpr ::= "*";
ODiv.    MulOpr ::= "/";
