-- Program
Prog. Program  ::= [Stmt];

-- Terminators
terminator Stmt ";" ;
separator nonempty Ident "";
separator nonempty Exp "";

-- Statements
SExp.    Stmt ::= Exp;
DExp.    Stmt ::= Decl;

-- Declarations
DFun.    Decl ::= "fun" Ident [Ident] "=" Exp;

ELog.    Exp   ::= Exp LogOpr Exp1;
EEq.     Exp1  ::= Exp1 EqOpr Exp2;
ERel.    Exp2  ::= Exp2 RelOpr Exp3;
EAdd.    Exp3  ::= Exp3 AddOpr Exp4;
EMul.    Exp4  ::= Exp4 MulOpr Exp5;
ENeg.    Exp5  ::= "not" Exp6;
EConst.  Exp6  ::= Constant;
EVal.    Exp6  ::= Ident;
ELet.    Exp7  ::= "let" Ident "=" Exp "in" Exp;
EIf.     Exp7  ::= "if" Exp "then" Exp "else" Exp;
ELam.    Exp7  ::= "lam" [Ident] "->" Exp;
EApp.    Exp7  ::= Exp8 "$" [Exp];

coercions Exp 8;

-- Constant
CInt.           Constant ::= Integer;
CTrue.	        Constant ::= "true";
CFalse.	        Constant ::= "false";


-- Operators
-- Logical Operators
OOr.  LogOpr ::= "or";
OAnd. LogOpr ::= "and";
-- Equality Operators
OEq.  EqOpr  ::= "==";
ONeq. EqOpr  ::= "!=";
-- Relational Operators
OLes. RelOpr ::= "<";
OGrt. RelOpr ::= ">";
OLeq. RelOpr ::= "<=";
OGeq. RelOpr ::= ">=";
--
OAdd. AddOpr ::= "+";
OSub. AddOpr ::= "-";
--
OMul. MulOpr ::= "*";
ODiv. MulOpr ::= "/";