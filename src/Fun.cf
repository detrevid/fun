-- Program
Prog. Program  ::= [Stmt];

-- Comments
comment "#" ;

-- Terminators
terminator Stmt ";" ;
separator nonempty Ident "";
separator nonempty Exp "";

-- Statements
SExp.    Stmt  ::= Exp;
DExp.    Stmt  ::= Decl;

-- Declarations
DFun.    Decl  ::= "fun" Ident [Ident] "=" Exp;

-- Expressions
ELet.    Exp  ::= "let" Ident "=" Exp "in" "{" Exp "}";
EIf.     Exp  ::= "if" Exp "then" Exp "else" Exp "endif";
ELam.    Exp  ::= "lam" [Ident] "->" "{" Exp "}";
ELog.    Exp   ::= Exp LogOpr Exp1;
EEq.     Exp1  ::= Exp1 EqOpr Exp2;
ERel.    Exp2  ::= Exp2 RelOpr Exp3;
EAdd.    Exp3  ::= Exp3 AddOpr Exp4;
EMul.    Exp4  ::= Exp4 MulOpr Exp5;
ENeg.    Exp5  ::= "not" Exp6;
EApp.    Exp6  ::= Exp6 "$" Exp7;
EConst.  Exp7 ::= Constant;
EVal.    Exp7  ::= Ident;

coercions Exp 7;

-- Constant
CInt.    Constant ::= Integer;
CTrue.	 Constant ::= "true";
CFalse.	 Constant ::= "false";


-- Operators
-- Logical Operators
OOr.     LogOpr ::= "or";
OAnd.    LogOpr ::= "and";
-- Equality Operators
OEq.     EqOpr  ::= "==";
ONeq.    EqOpr  ::= "!=";
-- Relational Operators
OLes.    RelOpr ::= "<";
OGrt.    RelOpr ::= ">";
OLeq.    RelOpr ::= "<=";
OGeq.    RelOpr ::= ">=";
-- Addition and Substitution operators
OAdd.    AddOpr ::= "+";
OSub.    AddOpr ::= "-";
-- Multiplication and division operators
OMul.    MulOpr ::= "*";
ODiv.    MulOpr ::= "/";